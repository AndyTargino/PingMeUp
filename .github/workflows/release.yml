name: Release

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  release:
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        registry-url: 'https://registry.npmjs.org'

    - name: Install dependencies
      run: npm ci

    - name: Build project
      run: npm run build

    - name: Get package version
      id: package_version
      run: echo "version=$(node -p "require('./package.json').version")" >> $GITHUB_OUTPUT

    - name: Check if tag exists
      id: tag_exists
      run: |
        if git rev-parse "v${{ steps.package_version.outputs.version }}" >/dev/null 2>&1; then
          echo "exists=true" >> $GITHUB_OUTPUT
        else
          echo "exists=false" >> $GITHUB_OUTPUT
        fi

    - name: Create Git tag
      if: steps.tag_exists.outputs.exists == 'false'
      run: |
        git config user.name "github-actions[bot]"
        git config user.email "github-actions[bot]@users.noreply.github.com"
        git tag -a "v${{ steps.package_version.outputs.version }}" -m "Release v${{ steps.package_version.outputs.version }}"
        git push origin "v${{ steps.package_version.outputs.version }}"

    - name: Create GitHub Release
      if: steps.tag_exists.outputs.exists == 'false'
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ steps.package_version.outputs.version }}
        release_name: Release v${{ steps.package_version.outputs.version }}
        body: |
          ## Changes in v${{ steps.package_version.outputs.version }}
          
          Auto-generated release from package.json version.
          
          ### Installation
          ```bash
          npm install pingmeup@${{ steps.package_version.outputs.version }}
          ```
          
          or
          
          ```bash
          yarn add pingmeup@${{ steps.package_version.outputs.version }}
          ```
        draft: false
        prerelease: false

    - name: Publish to NPM
      if: steps.tag_exists.outputs.exists == 'false'
      run: npm publish --access public
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

  test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'

    - name: Install dependencies
      run: npm ci

    - name: Build project
      run: npm run build

    - name: Run tests (if available)
      run: npm test --if-present